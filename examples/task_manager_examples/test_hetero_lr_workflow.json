{
    "task": "train",
    "module": "HeteroLR",
    "role": {
        "guest": [9999],
        "host": [10000],
        "arbiter": [10000]
    },
    "role_parameters": {
        "guest": {
            "WorkFlowParam": {
                "train_input_table": ["breast_hetero_guest"],
                "train_input_namespace": ["hetero_lr"],
                "data_input_table": ["breast_hetero_guest"],
                "data_input_namespace": ["hetero_lr"],
                "model_table": ["hetero_lr_guest_model"],
                "model_namespace": ["hetero_lr"],
                "predict_input_table": ["breast_hetero_guest"],
                "predict_input_namespace": ["hetero_lr"],
                "predict_output_table": ["hetero_lr_guest_predict_output_hetero_logistic_regression_example_standalone_20190402211541"],
                "predict_output_namespace": ["hetero_lr"],
                "evaluation_output_table": ["breast_hetero_guest"],
                "evaluation_output_namespace": ["hetero_lr"]
            },
            "DataIOParam":{
                "with_label": [true],
                "label_idx": [0],
                "label_type": ["int"],
                "output_format": ["dense"]
            },
            "OneHotEncoderParam": {
                "cols": [["fid10"]]
            }
        },
        "host": {
            "WorkFlowParam": {
                "train_input_table": ["breast_hetero_host"],
                "train_input_namespace": ["hetero_lr"],
                "data_input_table": ["breast_hetero_host"],
                "data_input_namespace": ["hetero_lr"],
                "model_table": ["hetero_lr_host_model"],
                "model_namespace": ["hetero_lr"],
                "predict_input_table": ["breast_hetero_host"],
                "predict_input_namespace": ["hetero_lr"],
                "predict_output_table": ["hetero_lr_host_predict_output_hetero_logistic_regression_example_standalone_20190402211541"],
                "predict_output_namespace": ["hetero_lr"],
                "evaluation_output_table": ["some_evaluate_output_table_name_hetero_logistic_regression_example_standalone_20190402211541"],
                "evaluation_output_namespace": ["hetero_lr"]
            },
             "DataIOParam":{
                "with_label": [false],
                "output_format": ["dense"]
            },
            "OneHotEncoderParam": {
                "cols": [["fid20"]]
            }
        },
        "arbiter": {
            "WorkFlowParam": {
                "train_input_table": [""],
                "train_input_namespace": ["example_data_namespace"],
                "data_input_table": [""],
                "data_input_namespace": ["example_data_namespace"]
            },
             "DataIOParam":{
                "with_label": [false],
                "output_format": ["dense"]
            }
        }
    },
    "algorithm_parameters": {
        "WorkFlowParam": {
            "work_mode": 1,
            "need_sample": false,
            "need_feature_selection": false,
            "need_intersect": true,
            "need_one_hot": false,
            "n_splits": 5
        },
        "IntersectParam": {
            "intersect_method": "raw",
            "is_send_intersect_ids": true,
            "join_role": "guest",
            "with_encode": true
        },
        "EncryptParam": {
            "method": "Paillier",
            "key_length": 1024
        },
        "InitParam": {
            "init_method": "random_uniform",
            "fit_intercept": true
        },
         "EncodeParam": {
             "encode_method": "sha256",
             "salt": "12345",
             "base64": false
         },
        "EvaluateParam": {
            "metrics": ["auc", "precision"],
            "classi_type": "binary",
            "pos_label": 1,
            "predict_threshold": [0.5]
        },
        "LogisticParam": {
            "penalty": "L2",
            "optimizer": "rmsprop",
            "eps": 1e-5,
            "alpha": 0.01,
            "max_iter": 10,
            "converge_func": "diff",
            "batch_size": 3200,
            "learning_rate": 0.15
        },
        "PredictParam": {
            "with_proba": true,
            "threshold": 0.5
        },
        "ScaleParam":{
            "method": "min_max_scale",
            "mode": "normal",
            "area": "all",
            "feat_upper": null,
            "feat_lower": null,
            "out_upper": null,
            "out_lower": null
        },
        "FeatureBinningParam": {
            "method": "quantile",
            "compress_thres": 10000,
            "head_size": 10000,
            "error": 0.001,
            "adjustment_factor": 0.5,
            "bin_num": 10,
            "cols": -1,
            "local_only": false,
            "result_table": "TO SET",
            "result_namespace": "TO SET",
            "display_result": ["iv"]
        },
        "FeatureSelectionParam": {
            "method": "fit",
            "filter_method": ["unique_value", "iv_value_thres",
                    "coefficient_of_variation_value_thres", "outlier_cols"],
            "select_cols": -1,
            "local_only": false,
            "result_table": "feature_selection_guest_model_table",
            "result_namespace": "feature_select_namespace"
        },
        "UniqueValueParam": {
            "eps": 1e-5
        },
        "IVSelectionParam": {
            "value_threshold": 0.1,
            "percentile_threshold": 1.0
        },
        "CoeffOfVarSelectionParam": {
            "value_threshold": 0.1,
            "percentile_threshold": 0.8
        },
        "OutlierColsSelectionParam": {
            "percentile": 0.9,
            "upper_threshold": 1000
        }
    }
}
